{"ast":null,"code":"var _jsxFileName = \"/Users/gothic/workspace/go/src/gothic/web_008/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Card extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-lg-4 d-flex align-items-stretch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"card-img-top\",\n      src: this.props.img,\n      alt: this.props.imgalt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 25\n      }\n    }, this.props.productname), \"Price: \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 32\n      }\n    }, this.props.price), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }\n    }, this.props.desc), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 25\n      }\n    }, \"Buy\"))));\n  }\n\n}\n\nclass CardContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: []\n    };\n  }\n\n  componentDidMount() {\n    console.log('Component Did Mount Called: ' + new Date().toLocaleString());\n    fetch('cards.json').then(res => res.json()).then(result => {\n      console.log('Fetch...');\n      this.setState({\n        cards: result\n      });\n    });\n  }\n\n  render() {\n    const cards = this.state.cards;\n    let items = cards.map(card => /*#__PURE__*/React.createElement(Card, Object.assign({\n      key: card.id\n    }, card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    })));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container pt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-center text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Products\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pt-4 row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, items));\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(CardContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/gothic/workspace/go/src/gothic/web_008/src/index.js"],"names":["React","ReactDOM","Card","Component","render","props","img","imgalt","productname","price","desc","CardContainer","constructor","state","cards","componentDidMount","console","log","Date","toLocaleString","fetch","then","res","json","result","setState","items","map","card","id","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAC/BC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,8CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,GAA9C;AAAmD,MAAA,GAAG,EAAE,KAAKD,KAAL,CAAWE,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKF,KAAL,CAAWG,WAAvC,CADJ,0BAEW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS,KAAKH,KAAL,CAAWI,KAApB,CAFX,eAGI;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,KAAKJ,KAAL,CAAWK,IAArC,CAHJ,eAII;AAAG,MAAA,IAAI,EAAC,GAAR;AAAY,MAAA,SAAS,EAAC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,CAFJ,CADJ,CADJ;AAaH;;AAf8B;;AAkBnC,MAAMC,aAAN,SAA4BX,KAAK,CAACG,SAAlC,CAA4C;AACxCS,EAAAA,WAAW,CAACP,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKQ,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiC,IAAIC,IAAJ,GAAWC,cAAX,EAA7C;AACAC,IAAAA,KAAK,CAAC,YAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEWG,MAAD,IAAY;AACdR,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,WAAKQ,QAAL,CAAc;AACVX,QAAAA,KAAK,EAAEU;AADG,OAAd;AAGH,KAPL;AAQH;;AAEDpB,EAAAA,MAAM,GAAG;AACL,UAAMU,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB;AACA,QAAIY,KAAK,GAAGZ,KAAK,CAACa,GAAN,CACRC,IAAI,iBAAI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACC;AAAhB,OAAwBD,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADA,CAAZ;AAGA,wBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,KADL,CAFJ,CADJ;AAQH;;AAjCuC,C,CAqC5C;;;AAEAzB,QAAQ,CAACG,MAAT,eACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI0B,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Card extends React.Component {\n    render() {\n        return (\n            <div className=\"col-md-6 col-lg-4 d-flex align-items-stretch\">\n                <div className=\"card mb-3\">\n                    <img className=\"card-img-top\" src={this.props.img} alt={this.props.imgalt} />\n                    <div className=\"card-body\">\n                        <h4 className=\"card-title\">{this.props.productname}</h4>\n                        Price: <strong>{this.props.price}</strong>\n                        <p className=\"card-text\">{this.props.desc}</p>\n                        <a href=\"#\" className=\"btn btn-primary\">Buy</a>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass CardContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cards: []\n        };\n    }\n\n    componentDidMount() {\n        console.log('Component Did Mount Called: ' + new Date().toLocaleString());\n        fetch('cards.json')\n            .then(res => res.json())\n            .then((result) => {\n                console.log('Fetch...');\n                this.setState({\n                    cards: result\n                });\n            });\n    }\n\n    render() {\n        const cards = this.state.cards;\n        let items = cards.map(\n            card => <Card key={card.id} {...card} />\n        );\n        return (\n            <div className='container pt-4'>\n                <h3 className='text-center text-primary'>Products</h3>\n                <div className=\"pt-4 row\">\n                    {items}\n                </div>\n            </div>\n        );\n    }\n}\n\n\n// ========================================\n\nReactDOM.render(\n    <CardContainer />,\n    document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}